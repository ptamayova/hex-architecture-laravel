name: tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Install Node Dependencies
        run: npm install

      - name: Build Assets
        run: npm run build

      - name: Get Playwright version
        id: playwright-version
        run: echo "version=$(npm list @playwright/test --depth=0 --json | jq -r '.dependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Install Playwright System Dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps

      - name: Rector Cache
        uses: actions/cache@v4
        with:
          path: /tmp/rector
          key: ${{ runner.os }}-rector-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-rector-
      - run: mkdir -p /tmp/rector

      - name: PHPStan Cache
        uses: actions/cache@v4
        with:
          path: /tmp/phpstan
          key: ${{ runner.os }}-phpstan-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-phpstan-
      - run: mkdir -p /tmp/phpstan

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Apply code style fixes
        run: composer ci:fix

      - name: Check for changes
        id: changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git add -A
          git commit -m "chore: apply code style fixes [skip ci]"

      - name: Push changes
        if: steps.changes.outputs.has_changes == 'true'
        continue-on-error: true
        run: git push

      - name: Tests
        run: composer test

      - name: Store Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: browser-screenshots
          path: |
            tests/Browser/Screenshots
